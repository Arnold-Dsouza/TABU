name: iOS Release Build

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release Type'
        required: true
        default: 'testflight'
        type: choice
        options:
        - testflight
        - appstore

jobs:
  build-ios-release:
    runs-on: macos-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm ci
        
    - name: Build Web App
      run: npm run build
        
    - name: Setup Capacitor
      run: npm install -g @capacitor/cli
        
    - name: Sync iOS Platform
      run: npx cap sync ios
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Install CocoaPods
      run: sudo gem install cocoapods
        
    - name: Install iOS Dependencies
      run: |
        cd ios/App
        pod install
        
    # Import signing certificates (you'll need to add these as secrets)
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v2
      with:
        p12-file-base64: ${{ secrets.IOS_DISTRIBUTION_CERT }}
        p12-password: ${{ secrets.IOS_DISTRIBUTION_CERT_PASSWORD }}
        
    - name: Download Provisioning Profile
      uses: Apple-Actions/download-provisioning-profiles@v3
      with:
        bundle-id: com.tabu2.app
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
        
    - name: Build iOS Release
      run: |
        cd ios/App
        xcodebuild -workspace App.xcworkspace \
                   -scheme App \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath $PWD/build/App.xcarchive \
                   archive
                   
    - name: Export iOS App for App Store
      run: |
        cd ios/App
        cat > build/ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>app-store</string>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
            <key>compileBitcode</key>
            <false/>
        </dict>
        </plist>
        EOF
        
        xcodebuild -exportArchive \
                   -archivePath $PWD/build/App.xcarchive \
                   -exportOptionsPlist $PWD/build/ExportOptions.plist \
                   -exportPath $PWD/build/
                   
    - name: Upload to TestFlight
      if: ${{ github.event.inputs.release_type == 'testflight' || github.event_name == 'push' }}
      uses: Apple-Actions/upload-testflight-build@v1
      with:
        app-path: ios/App/build/App.ipa
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
        
    - name: Upload iOS Release Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-release-${{ github.sha }}
        path: ios/App/build/
        retention-days: 90
