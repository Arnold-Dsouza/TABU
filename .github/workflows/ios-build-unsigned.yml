name: iOS Build (No Signing)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-ios-unsigned:
    runs-on: macos-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm ci
        
    - name: Build Web App
      run: npm run build
        
    - name: Setup Capacitor
      run: npm install -g @capacitor/cli
        
    - name: Sync iOS Platform
      run: npx cap sync ios
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Install CocoaPods
      run: sudo gem install cocoapods
        
    - name: Install iOS Dependencies
      run: |
        cd ios/App
        pod install
        
    - name: Build for iOS Simulator
      run: |
        cd ios/App
        xcodebuild -workspace App.xcworkspace \
                   -scheme App \
                   -configuration Debug \
                   -destination 'platform=iOS Simulator,name=iPhone 15 Pro,OS=latest' \
                   -derivedDataPath build/DerivedData \
                   clean build
                   
    - name: Find Built App
      run: |
        cd ios/App
        find build/DerivedData -name "*.app" -type d | head -5
        
    - name: Create App Archive
      run: |
        cd ios/App
        APP_PATH=$(find build/DerivedData -name "TABU 2.app" -type d | head -1)
        if [ ! -z "$APP_PATH" ]; then
          echo "Found app at: $APP_PATH"
          mkdir -p build/output
          cp -R "$APP_PATH" build/output/
          cd build/output
          zip -r "TABU-2-iOS-Simulator.zip" "TABU 2.app"
          ls -la
        else
          echo "App not found, checking all .app files:"
          find build/DerivedData -name "*.app" -type d
        fi
        
    - name: Upload iOS Simulator Build
      uses: actions/upload-artifact@v4
      with:
        name: ios-simulator-app-${{ github.sha }}
        path: ios/App/build/output/
        retention-days: 30
        
    - name: Build Summary
      run: |
        echo "âœ… iOS Build Completed Successfully!"
        echo "ðŸ“± Built for iOS Simulator"
        echo "ðŸ“¦ Download the artifact to get the .app file"
        echo "ðŸ”§ To install: Extract the .zip and drag TABU 2.app to iOS Simulator"
