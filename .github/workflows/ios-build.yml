name: Build iOS App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Install dependencies
      run: npm ci

    - name: Build web app
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: "AIzaSyBuazs1eTTu92mY828B0tx1k8-6FQ2-11c"
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: "laundry-3024d.firebaseapp.com"
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: "laundry-3024d"
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: "laundry-3024d.firebasestorage.app"
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: "57247892501"
        NEXT_PUBLIC_FIREBASE_APP_ID: "1:57247892501:web:f8967e02ea63f106d5fa1c"
      run: npm run build

    - name: Sync Capacitor iOS
      run: npx cap sync ios

    - name: Install CocoaPods dependencies
      run: |
        cd ios/App
        pod install

    - name: Build iOS app (Debug)
      run: |
        cd ios/App
        xcodebuild -workspace App.xcworkspace \
          -scheme App \
          -configuration Debug \
          -destination 'generic/platform=iOS Simulator' \
          -derivedDataPath build/ \
          build

    - name: Archive iOS app for device
      run: |
        cd ios/App
        xcodebuild -workspace App.xcworkspace \
          -scheme App \
          -configuration Release \
          -destination 'generic/platform=iOS' \
          -archivePath build/App.xcarchive \
          archive

    - name: Export IPA
      run: |
        cd ios/App
        # Create export options plist for ad-hoc distribution
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>method</key>
          <string>development</string>
          <key>thinning</key>
          <string>&lt;none&gt;</string>
        </dict>
        </plist>
        EOF
        
        # Export the archive
        xcodebuild -exportArchive \
          -archivePath build/App.xcarchive \
          -exportPath build/ \
          -exportOptionsPlist ExportOptions.plist

    - name: Get package version
      id: package-version
      run: echo "version=v$(node -p "require('./package.json').version")-ios" >> $GITHUB_OUTPUT

    - name: Upload iOS build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: |
          ios/App/build/App.xcarchive
          ios/App/build/*.ipa

    - name: Create iOS Release (if IPA exists)
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.package-version.outputs.version }}
        name: iOS Release ${{ steps.package-version.outputs.version }}
        files: ios/App/build/*.ipa
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true
