
name: Build Android APK & Create Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install dependencies
      run: npm ci

    - name: Build web app
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: "AIzaSyBuazs1eTTu92mY828B0tx1k8-6FQ2-11c"
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: "laundry-3024d.firebaseapp.com"
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: "laundry-3024d"
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: "laundry-3024d.firebasestorage.app"
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: "57247892501"
        NEXT_PUBLIC_FIREBASE_APP_ID: "1:57247892501:web:f8967e02ea63f106d5fa1c"
      run: npm run build

    - name: Sync Capacitor
      run: npx cap sync android

    - name: Grant execute permission for gradlew
      run: chmod +x android/gradlew

    - name: Build Android APK
      run: |
        cd android
        ./gradlew assembleDebug

    - name: Rename APK
      run: |
        VERSION=$(node -p "require('./package.json').version")
        mv android/app/build/outputs/apk/debug/app-debug.apk tabu-v${VERSION}.apk

    - name: Get package version
      id: package-version
      run: echo "version=v$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Check if release exists
      id: check-release
      run: |
        VERSION=$(node -p "require('./package.json').version")
        if gh release view "v${VERSION}" >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create GitHub Release
      if: github.ref == 'refs/heads/main' && steps.check-release.outputs.exists == 'false'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.package-version.outputs.version }}
        name: Release ${{ steps.package-version.outputs.version }}
        files: tabu-v*.apk
        body: |
          ## What's Changed
          - Auto-generated release for version ${{ steps.package-version.outputs.version }}
          
          ## Installation
          1. Download the APK file below
          2. Enable "Install from unknown sources" in your Android settings
          3. Install the APK
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload APK as Artifact (for debugging)
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: tabu-v*.apk
